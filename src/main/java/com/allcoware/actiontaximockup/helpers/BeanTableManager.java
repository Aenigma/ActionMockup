/*
 * Copyright (C) 2014 Jon Butler, Sam Morekas,
 *     Rushikesh Parekh, and Kevin Raoofi
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.allcoware.actiontaximockup.helpers;

import com.allcoware.actiontaximockup.resources.CustomMoney;
import com.allcoware.actiontaximockup.resources.Transaction;
import com.allcoware.actiontaximockup.resources.beanutils.CustomMoneyConverter;
import com.allcoware.actiontaximockup.resources.beanutils.InstantConverter;
import java.time.Instant;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import org.apache.commons.beanutils.BeanUtilsBean;

/**
 *
 * @author Kevin Raoofi
 * @param <R>
 */
public class BeanTableManager<R> extends javax.swing.JPanel {

    private static final BeanTableModelFactory btf;

    static {
        btf = new BeanTableModelFactory(new BeanUtilsBean());
        btf.registerConverter(new CustomMoneyConverter(), CustomMoney.class);
        btf.registerConverter(new InstantConverter(), Instant.class);
    }

    private final BeanTableModel btm;
    private final Class<R> managedClass;

    public BeanTableManager(Class<R> managedClass) {
        this.managedClass = managedClass;
        this.btm = btf.get(managedClass);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        btnAddRow = new javax.swing.JButton();
        btnDelRow = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        mainTable.setModel(btm);
        jScrollPane1.setViewportView(mainTable);

        btnAddRow.setText("Add");
        btnAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRowActionPerformed(evt);
            }
        });

        btnDelRow.setText("Delete");
        btnDelRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelRowActionPerformed(evt);
            }
        });

        jButton1.setText("Save");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddRow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelRow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddRow)
                    .addComponent(btnDelRow)
                    .addComponent(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings({"BroadCatchBlock", "TooBroadCatch"})
    private void btnAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRowActionPerformed
        int row = mainTable.getSelectedRow();
        row = row > 0 ? row : mainTable.getRowCount();
        try {
            btm.addRow(row);
            mainTable.setRowSelectionInterval(row, row);
        } catch (Exception ex) {
            Logger.getLogger(BeanTableManager.class.getName())
                    .log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex, "Error adding row",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddRowActionPerformed

    private void btnDelRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelRowActionPerformed
        int[] rows = mainTable.getSelectedRows();
        if (rows.length < 1) {
            return;
        }
        btm.removeRows(rows);
        mainTable.clearSelection();
    }//GEN-LAST:event_btnDelRowActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRow;
    private javax.swing.JButton btnDelRow;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mainTable;
    // End of variables declaration//GEN-END:variables
    
    public JTable getMainJTable() {
        return mainTable;
    }
}
